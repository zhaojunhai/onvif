/* soapStub.h
   Generated by gSOAP 2.8.28 from onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <deque>
#include <list>
#include <vector>
#include <set>
#define SOAP_WSDD_2005
#define SOAP_WSA_200408
#define SOAP_NAMESPACE_OF_wsdd	"http://schemas.xmlsoap.org/ws/2005/04/discovery"
#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20828
# error "GSOAP VERSION 20828 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/* wsa.h:119 */
#ifndef SOAP_TYPE_wsa__RelationshipTypeValues
#define SOAP_TYPE_wsa__RelationshipTypeValues (16)
/* wsa:RelationshipTypeValues */
enum wsa__RelationshipTypeValues
{
	wsa__Reply = 0
};
#endif

/* wsa.h:127 */
#ifndef SOAP_TYPE_wsa__FaultSubcodeValues
#define SOAP_TYPE_wsa__FaultSubcodeValues (17)
/* wsa:FaultSubcodeValues */
enum wsa__FaultSubcodeValues
{
	wsa__InvalidMessageInformationHeader = 0,
	wsa__MessageInformationHeaderRequired = 1,
	wsa__DestinationUnreachable = 2,
	wsa__ActionNotSupported = 3,
	wsa__EndpointUnavailable = 4
};
#endif

/* wsdd10.h:111 */
#ifndef SOAP_TYPE_wsdd__FaultCodeType
#define SOAP_TYPE_wsdd__FaultCodeType (62)
/* wsdd:FaultCodeType */
enum wsdd__FaultCodeType
{
	wsdd__MatchingRuleNotSupported = 0
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs, and Unions                                               *
 *                                                                            *
\******************************************************************************/

struct wsa__EndpointReferenceType;	/* wsa.h:94 */
struct wsa__ReferencePropertiesType;	/* wsa.h:97 */
struct wsa__ReferenceParametersType;	/* wsa.h:100 */
struct wsa__ServiceNameType;	/* wsa.h:103 */
struct wsa__Relationship;	/* wsa.h:106 */
struct wsdd__HelloType;	/* wsdd10.h:57 */
struct wsdd__ByeType;	/* wsdd10.h:60 */
struct wsdd__ProbeType;	/* wsdd10.h:63 */
struct wsdd__ProbeMatchesType;	/* wsdd10.h:66 */
struct wsdd__ProbeMatchType;	/* wsdd10.h:69 */
struct wsdd__ResolveType;	/* wsdd10.h:72 */
struct wsdd__ResolveMatchesType;	/* wsdd10.h:75 */
struct wsdd__ResolveMatchType;	/* wsdd10.h:78 */
struct wsdd__SecurityType;	/* wsdd10.h:84 */
struct wsdd__SigType;	/* wsdd10.h:87 */
struct wsdd__ScopesType;	/* wsdd10.h:81 */
struct wsdd__AppSequenceType;	/* wsdd10.h:90 */
struct __wsdd__Hello;	/* wsdx.h:67 */
struct __wsdd__Bye;	/* wsdx.h:76 */
struct __wsdd__Probe;	/* wsdx.h:85 */
struct __wsdd__ProbeMatches;	/* wsdx.h:94 */
struct __wsdd__Resolve;	/* wsdx.h:103 */
struct __wsdd__ResolveMatches;	/* wsdx.h:112 */
struct __tdn__Hello;	/* onvif.h:323 */
struct __tdn__Bye;	/* onvif.h:389 */
struct __tdn__Probe;	/* onvif.h:455 */

/* wsa.h:94 */
#ifndef SOAP_TYPE_wsa__EndpointReferenceType
#define SOAP_TYPE_wsa__EndpointReferenceType (11)
/* wsa:EndpointReferenceType complex type: */
struct wsa__EndpointReferenceType
{
public:
	char *Address;	/* required element of XSD type xsd:string */
	struct wsa__ReferencePropertiesType *ReferenceProperties;	/* optional element of XSD type wsa:ReferencePropertiesType */
	struct wsa__ReferenceParametersType *ReferenceParameters;	/* optional element of XSD type wsa:ReferenceParametersType */
	char **PortType;	/* optional element of XSD type xsd:QName */
	struct wsa__ServiceNameType *ServiceName;	/* optional element of XSD type wsa:ServiceNameType */
	int __size;	/* sequence of elements <-any> of XSD type xsd:anyType */
	char **__any;
	char *__anyAttribute;	/* optional attribute of XSD type xsd:anyType */
public:
	int soap_type() const { return 11; } /* = unique type id SOAP_TYPE_wsa__EndpointReferenceType */
	         wsa__EndpointReferenceType();
	friend SOAP_FMAC1 wsa__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa.h:97 */
#ifndef SOAP_TYPE_wsa__ReferencePropertiesType
#define SOAP_TYPE_wsa__ReferencePropertiesType (12)
/* wsa:ReferencePropertiesType complex type: */
struct wsa__ReferencePropertiesType
{
public:
	int __size;	/* sequence of elements <-any> of XSD type xsd:anyType */
	char **__any;
public:
	int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_wsa__ReferencePropertiesType */
	         wsa__ReferencePropertiesType();
	friend SOAP_FMAC1 wsa__ReferencePropertiesType * SOAP_FMAC2 soap_instantiate_wsa__ReferencePropertiesType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa.h:100 */
#ifndef SOAP_TYPE_wsa__ReferenceParametersType
#define SOAP_TYPE_wsa__ReferenceParametersType (13)
/* wsa:ReferenceParametersType complex type: */
struct wsa__ReferenceParametersType
{
public:
	int __size;	/* sequence of elements <-any> of XSD type xsd:anyType */
	char **__any;
public:
	int soap_type() const { return 13; } /* = unique type id SOAP_TYPE_wsa__ReferenceParametersType */
	         wsa__ReferenceParametersType();
	friend SOAP_FMAC1 wsa__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa.h:103 */
#ifndef SOAP_TYPE_wsa__ServiceNameType
#define SOAP_TYPE_wsa__ServiceNameType (14)
/* wsa:ServiceNameType simple type: */
struct wsa__ServiceNameType
{
public:
	char *__item;	/* mixed XML content */
	char *PortName;	/* optional attribute of XSD type xsd:string */
	char *__anyAttribute;	/* optional attribute of XSD type xsd:anyType */
public:
	int soap_type() const { return 14; } /* = unique type id SOAP_TYPE_wsa__ServiceNameType */
	         wsa__ServiceNameType();
	friend SOAP_FMAC1 wsa__ServiceNameType * SOAP_FMAC2 soap_instantiate_wsa__ServiceNameType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa.h:106 */
#ifndef SOAP_TYPE_wsa__Relationship
#define SOAP_TYPE_wsa__Relationship (15)
/* wsa:Relationship simple type: */
struct wsa__Relationship
{
public:
	char *__item;	/* mixed XML content */
	char *RelationshipType;	/* optional attribute of XSD type xsd:QName */
	char *__anyAttribute;	/* optional attribute of XSD type xsd:anyType */
public:
	int soap_type() const { return 15; } /* = unique type id SOAP_TYPE_wsa__Relationship */
	         wsa__Relationship();
	friend SOAP_FMAC1 wsa__Relationship * SOAP_FMAC2 soap_instantiate_wsa__Relationship(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa.h:250 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (33)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	char *wsa__MessageID;	/* optional element of XSD type wsa:MessageID */
	struct wsa__Relationship *wsa__RelatesTo;	/* optional element of XSD type wsa:RelatesTo */
	struct wsa__EndpointReferenceType *wsa__From;	/* optional element of XSD type wsa:From */
	struct wsa__EndpointReferenceType *wsa__ReplyTo;	/* mustUnderstand */
	struct wsa__EndpointReferenceType *wsa__FaultTo;	/* mustUnderstand */
	char *wsa__To;	/* mustUnderstand */
	char *wsa__Action;	/* mustUnderstand */
	struct wsdd__AppSequenceType *wsdd__AppSequence;	/* optional element of XSD type wsdd:AppSequenceType */
public:
	int soap_type() const { return 33; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
	         SOAP_ENV__Header();
	friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa.h:266 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (38)
/* SOAP-ENV:Detail complex type: */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below)
	   WARNING: do not create a cyclic data structure graph throught this element unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
	void *fault;	/* transient (not serialized) */
public:
	int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
	         SOAP_ENV__Detail();
	friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa.h:267 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (40)
/* Type SOAP_ENV__Code is a recursive data type (in)directly referencing itself through its (base) class members */
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of XSD type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of XSD type SOAP-ENV:Code */
public:
	int soap_type() const { return 40; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
	         SOAP_ENV__Code();
	friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa.h:268 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (42)
/* SOAP-ENV:Reason complex type: */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of XSD type xsd:string */
public:
	int soap_type() const { return 42; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
	         SOAP_ENV__Reason();
	friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa.h:273 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (46)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of XSD type xsd:QName */
	char *faultstring;	/* optional element of XSD type xsd:string */
	char *faultactor;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of XSD type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of XSD type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of XSD type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of XSD type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of XSD type SOAP-ENV:Detail */
public:
	int soap_type() const { return 46; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
	         SOAP_ENV__Fault();
	friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsdd10.h:57 */
#ifndef SOAP_TYPE_wsdd__HelloType
#define SOAP_TYPE_wsdd__HelloType (47)
/* wsdd:HelloType complex type: */
struct wsdd__HelloType
{
public:
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of XSD type wsa:EndpointReference */
	char *Types;	/* optional element of XSD type xsd:QName */
	struct wsdd__ScopesType *Scopes;	/* optional element of XSD type wsdd:ScopesType */
	char *XAddrs;	/* optional element of XSD type wsdd:UriListType */
	unsigned int MetadataVersion;	/* required element of XSD type xsd:unsignedInt */
public:
	int soap_type() const { return 47; } /* = unique type id SOAP_TYPE_wsdd__HelloType */
	         wsdd__HelloType();
	friend SOAP_FMAC1 wsdd__HelloType * SOAP_FMAC2 soap_instantiate_wsdd__HelloType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:60 */
#ifndef SOAP_TYPE_wsdd__ByeType
#define SOAP_TYPE_wsdd__ByeType (48)
/* wsdd:ByeType complex type: */
struct wsdd__ByeType
{
public:
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of XSD type wsa:EndpointReference */
	char *Types;	/* optional element of XSD type xsd:QName */
	struct wsdd__ScopesType *Scopes;	/* optional element of XSD type wsdd:ScopesType */
	char *XAddrs;	/* optional element of XSD type wsdd:UriListType */
	unsigned int *MetadataVersion;	/* optional element of XSD type xsd:unsignedInt */
public:
	int soap_type() const { return 48; } /* = unique type id SOAP_TYPE_wsdd__ByeType */
	         wsdd__ByeType();
	friend SOAP_FMAC1 wsdd__ByeType * SOAP_FMAC2 soap_instantiate_wsdd__ByeType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:63 */
#ifndef SOAP_TYPE_wsdd__ProbeType
#define SOAP_TYPE_wsdd__ProbeType (49)
/* wsdd:ProbeType complex type: */
struct wsdd__ProbeType
{
public:
	char *Types;	/* optional element of XSD type xsd:QName */
	struct wsdd__ScopesType *Scopes;	/* optional element of XSD type wsdd:ScopesType */
public:
	int soap_type() const { return 49; } /* = unique type id SOAP_TYPE_wsdd__ProbeType */
	         wsdd__ProbeType();
	friend SOAP_FMAC1 wsdd__ProbeType * SOAP_FMAC2 soap_instantiate_wsdd__ProbeType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:66 */
#ifndef SOAP_TYPE_wsdd__ProbeMatchesType
#define SOAP_TYPE_wsdd__ProbeMatchesType (50)
/* wsdd:ProbeMatchesType complex type: */
struct wsdd__ProbeMatchesType
{
public:
	int __sizeProbeMatch;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <ProbeMatch> of XSD type wsdd:ProbeMatchType */
	struct wsdd__ProbeMatchType *ProbeMatch;
public:
	int soap_type() const { return 50; } /* = unique type id SOAP_TYPE_wsdd__ProbeMatchesType */
	         wsdd__ProbeMatchesType();
	friend SOAP_FMAC1 wsdd__ProbeMatchesType * SOAP_FMAC2 soap_instantiate_wsdd__ProbeMatchesType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:69 */
#ifndef SOAP_TYPE_wsdd__ProbeMatchType
#define SOAP_TYPE_wsdd__ProbeMatchType (51)
/* wsdd:ProbeMatchType complex type: */
struct wsdd__ProbeMatchType
{
public:
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of XSD type wsa:EndpointReference */
	char *Types;	/* optional element of XSD type xsd:QName */
	struct wsdd__ScopesType *Scopes;	/* optional element of XSD type wsdd:ScopesType */
	char *XAddrs;	/* optional element of XSD type wsdd:UriListType */
	unsigned int MetadataVersion;	/* required element of XSD type xsd:unsignedInt */
public:
	int soap_type() const { return 51; } /* = unique type id SOAP_TYPE_wsdd__ProbeMatchType */
	         wsdd__ProbeMatchType();
	friend SOAP_FMAC1 wsdd__ProbeMatchType * SOAP_FMAC2 soap_instantiate_wsdd__ProbeMatchType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:72 */
#ifndef SOAP_TYPE_wsdd__ResolveType
#define SOAP_TYPE_wsdd__ResolveType (52)
/* wsdd:ResolveType complex type: */
struct wsdd__ResolveType
{
public:
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of XSD type wsa:EndpointReference */
public:
	int soap_type() const { return 52; } /* = unique type id SOAP_TYPE_wsdd__ResolveType */
	         wsdd__ResolveType();
	friend SOAP_FMAC1 wsdd__ResolveType * SOAP_FMAC2 soap_instantiate_wsdd__ResolveType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:75 */
#ifndef SOAP_TYPE_wsdd__ResolveMatchesType
#define SOAP_TYPE_wsdd__ResolveMatchesType (53)
/* wsdd:ResolveMatchesType complex type: */
struct wsdd__ResolveMatchesType
{
public:
	struct wsdd__ResolveMatchType *ResolveMatch;	/* optional element of XSD type wsdd:ResolveMatchType */
public:
	int soap_type() const { return 53; } /* = unique type id SOAP_TYPE_wsdd__ResolveMatchesType */
	         wsdd__ResolveMatchesType();
	friend SOAP_FMAC1 wsdd__ResolveMatchesType * SOAP_FMAC2 soap_instantiate_wsdd__ResolveMatchesType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:78 */
#ifndef SOAP_TYPE_wsdd__ResolveMatchType
#define SOAP_TYPE_wsdd__ResolveMatchType (54)
/* wsdd:ResolveMatchType complex type: */
struct wsdd__ResolveMatchType
{
public:
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of XSD type wsa:EndpointReference */
	char *Types;	/* optional element of XSD type xsd:QName */
	struct wsdd__ScopesType *Scopes;	/* optional element of XSD type wsdd:ScopesType */
	char *XAddrs;	/* optional element of XSD type wsdd:UriListType */
	unsigned int MetadataVersion;	/* required element of XSD type xsd:unsignedInt */
public:
	int soap_type() const { return 54; } /* = unique type id SOAP_TYPE_wsdd__ResolveMatchType */
	         wsdd__ResolveMatchType();
	friend SOAP_FMAC1 wsdd__ResolveMatchType * SOAP_FMAC2 soap_instantiate_wsdd__ResolveMatchType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:84 */
#ifndef SOAP_TYPE_wsdd__SecurityType
#define SOAP_TYPE_wsdd__SecurityType (56)
/* wsdd:SecurityType complex type: */
struct wsdd__SecurityType
{
public:
	struct wsdd__SigType *Sig;	/* optional element of XSD type wsdd:SigType */
public:
	int soap_type() const { return 56; } /* = unique type id SOAP_TYPE_wsdd__SecurityType */
	         wsdd__SecurityType();
	friend SOAP_FMAC1 wsdd__SecurityType * SOAP_FMAC2 soap_instantiate_wsdd__SecurityType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:87 */
#ifndef SOAP_TYPE_wsdd__SigType
#define SOAP_TYPE_wsdd__SigType (57)
/* wsdd:SigType complex type: */
struct wsdd__SigType
{
public:
	char *Scheme;	/* required attribute of XSD type xsd:string */
	char *KeyId;	/* optional attribute of XSD type xsd:string */
	char *Refs;	/* required attribute of XSD type xsd:string */
	char *Sig;	/* required attribute of XSD type xsd:string */
public:
	int soap_type() const { return 57; } /* = unique type id SOAP_TYPE_wsdd__SigType */
	         wsdd__SigType();
	friend SOAP_FMAC1 wsdd__SigType * SOAP_FMAC2 soap_instantiate_wsdd__SigType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:81 */
#ifndef SOAP_TYPE_wsdd__ScopesType
#define SOAP_TYPE_wsdd__ScopesType (55)
/* wsdd:ScopesType simple type: */
struct wsdd__ScopesType
{
public:
	char *__item;	/* mixed XML content */
	char *MatchBy;	/* optional attribute of XSD type xsd:string */
public:
	int soap_type() const { return 55; } /* = unique type id SOAP_TYPE_wsdd__ScopesType */
	         wsdd__ScopesType();
	friend SOAP_FMAC1 wsdd__ScopesType * SOAP_FMAC2 soap_instantiate_wsdd__ScopesType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdd10.h:90 */
#ifndef SOAP_TYPE_wsdd__AppSequenceType
#define SOAP_TYPE_wsdd__AppSequenceType (58)
/* wsdd:AppSequenceType complex type: */
struct wsdd__AppSequenceType
{
public:
	unsigned int InstanceId;	/* required attribute of XSD type xsd:unsignedInt */
	char *SequenceId;	/* optional attribute of XSD type xsd:string */
	unsigned int MessageNumber;	/* required attribute of XSD type xsd:unsignedInt */
public:
	int soap_type() const { return 58; } /* = unique type id SOAP_TYPE_wsdd__AppSequenceType */
	         wsdd__AppSequenceType();
	friend SOAP_FMAC1 wsdd__AppSequenceType * SOAP_FMAC2 soap_instantiate_wsdd__AppSequenceType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdx.h:67 */
#ifndef SOAP_TYPE___wsdd__Hello
#define SOAP_TYPE___wsdd__Hello (71)
/* Operation wrapper: */
struct __wsdd__Hello
{
public:
	struct wsdd__HelloType *wsdd__Hello;	/* optional element of XSD type wsdd:HelloType */
public:
	int soap_type() const { return 71; } /* = unique type id SOAP_TYPE___wsdd__Hello */
	         __wsdd__Hello();
	friend SOAP_FMAC1 __wsdd__Hello * SOAP_FMAC2 soap_instantiate___wsdd__Hello(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdx.h:76 */
#ifndef SOAP_TYPE___wsdd__Bye
#define SOAP_TYPE___wsdd__Bye (74)
/* Operation wrapper: */
struct __wsdd__Bye
{
public:
	struct wsdd__ByeType *wsdd__Bye;	/* optional element of XSD type wsdd:ByeType */
public:
	int soap_type() const { return 74; } /* = unique type id SOAP_TYPE___wsdd__Bye */
	         __wsdd__Bye();
	friend SOAP_FMAC1 __wsdd__Bye * SOAP_FMAC2 soap_instantiate___wsdd__Bye(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdx.h:85 */
#ifndef SOAP_TYPE___wsdd__Probe
#define SOAP_TYPE___wsdd__Probe (77)
/* Operation wrapper: */
struct __wsdd__Probe
{
public:
	struct wsdd__ProbeType *wsdd__Probe;	/* optional element of XSD type wsdd:ProbeType */
public:
	int soap_type() const { return 77; } /* = unique type id SOAP_TYPE___wsdd__Probe */
	         __wsdd__Probe();
	friend SOAP_FMAC1 __wsdd__Probe * SOAP_FMAC2 soap_instantiate___wsdd__Probe(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdx.h:94 */
#ifndef SOAP_TYPE___wsdd__ProbeMatches
#define SOAP_TYPE___wsdd__ProbeMatches (80)
/* Operation wrapper: */
struct __wsdd__ProbeMatches
{
public:
	struct wsdd__ProbeMatchesType *wsdd__ProbeMatches;	/* optional element of XSD type wsdd:ProbeMatchesType */
public:
	int soap_type() const { return 80; } /* = unique type id SOAP_TYPE___wsdd__ProbeMatches */
	         __wsdd__ProbeMatches();
	friend SOAP_FMAC1 __wsdd__ProbeMatches * SOAP_FMAC2 soap_instantiate___wsdd__ProbeMatches(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdx.h:103 */
#ifndef SOAP_TYPE___wsdd__Resolve
#define SOAP_TYPE___wsdd__Resolve (83)
/* Operation wrapper: */
struct __wsdd__Resolve
{
public:
	struct wsdd__ResolveType *wsdd__Resolve;	/* optional element of XSD type wsdd:ResolveType */
public:
	int soap_type() const { return 83; } /* = unique type id SOAP_TYPE___wsdd__Resolve */
	         __wsdd__Resolve();
	friend SOAP_FMAC1 __wsdd__Resolve * SOAP_FMAC2 soap_instantiate___wsdd__Resolve(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsdx.h:112 */
#ifndef SOAP_TYPE___wsdd__ResolveMatches
#define SOAP_TYPE___wsdd__ResolveMatches (86)
/* Operation wrapper: */
struct __wsdd__ResolveMatches
{
public:
	struct wsdd__ResolveMatchesType *wsdd__ResolveMatches;	/* optional element of XSD type wsdd:ResolveMatchesType */
public:
	int soap_type() const { return 86; } /* = unique type id SOAP_TYPE___wsdd__ResolveMatches */
	         __wsdd__ResolveMatches();
	friend SOAP_FMAC1 __wsdd__ResolveMatches * SOAP_FMAC2 soap_instantiate___wsdd__ResolveMatches(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* onvif.h:323 */
#ifndef SOAP_TYPE___tdn__Hello
#define SOAP_TYPE___tdn__Hello (89)
/* Operation wrapper: */
struct __tdn__Hello
{
public:
	struct wsdd__HelloType tdn__Hello;	/* required element of XSD type wsdd:HelloType */
public:
	int soap_type() const { return 89; } /* = unique type id SOAP_TYPE___tdn__Hello */
	         __tdn__Hello();
	friend SOAP_FMAC1 __tdn__Hello * SOAP_FMAC2 soap_instantiate___tdn__Hello(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* onvif.h:389 */
#ifndef SOAP_TYPE___tdn__Bye
#define SOAP_TYPE___tdn__Bye (91)
/* Operation wrapper: */
struct __tdn__Bye
{
public:
	struct wsdd__ByeType tdn__Bye;	/* required element of XSD type wsdd:ByeType */
public:
	int soap_type() const { return 91; } /* = unique type id SOAP_TYPE___tdn__Bye */
	         __tdn__Bye();
	friend SOAP_FMAC1 __tdn__Bye * SOAP_FMAC2 soap_instantiate___tdn__Bye(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* onvif.h:455 */
#ifndef SOAP_TYPE___tdn__Probe
#define SOAP_TYPE___tdn__Probe (94)
/* Operation wrapper: */
struct __tdn__Probe
{
public:
	struct wsdd__ProbeType tdn__Probe;	/* required element of XSD type wsdd:ProbeType */
public:
	int soap_type() const { return 94; } /* = unique type id SOAP_TYPE___tdn__Probe */
	         __tdn__Probe();
	friend SOAP_FMAC1 __tdn__Probe * SOAP_FMAC2 soap_instantiate___tdn__Probe(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* onvif.h:101 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* onvif.h:101 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* wsa.h:220 */
#ifndef SOAP_TYPE__wsa__EndpointReference
#define SOAP_TYPE__wsa__EndpointReference (23)
typedef struct wsa__EndpointReferenceType _wsa__EndpointReference;
#endif

/* wsa.h:223 */
#ifndef SOAP_TYPE__wsa__MessageID
#define SOAP_TYPE__wsa__MessageID (24)
typedef char *_wsa__MessageID;
#endif

/* wsa.h:226 */
#ifndef SOAP_TYPE__wsa__RelatesTo
#define SOAP_TYPE__wsa__RelatesTo (25)
typedef struct wsa__Relationship _wsa__RelatesTo;
#endif

/* wsa.h:229 */
#ifndef SOAP_TYPE__wsa__To
#define SOAP_TYPE__wsa__To (26)
typedef char *_wsa__To;
#endif

/* wsa.h:232 */
#ifndef SOAP_TYPE__wsa__Action
#define SOAP_TYPE__wsa__Action (27)
typedef char *_wsa__Action;
#endif

/* wsa.h:235 */
#ifndef SOAP_TYPE__wsa__From
#define SOAP_TYPE__wsa__From (28)
typedef struct wsa__EndpointReferenceType _wsa__From;
#endif

/* wsa.h:238 */
#ifndef SOAP_TYPE__wsa__ReplyTo
#define SOAP_TYPE__wsa__ReplyTo (29)
typedef struct wsa__EndpointReferenceType _wsa__ReplyTo;
#endif

/* wsa.h:241 */
#ifndef SOAP_TYPE__wsa__FaultTo
#define SOAP_TYPE__wsa__FaultTo (30)
typedef struct wsa__EndpointReferenceType _wsa__FaultTo;
#endif

/* wsa.h:244 */
#ifndef SOAP_TYPE__wsa__ReplyAfter
#define SOAP_TYPE__wsa__ReplyAfter (32)
typedef unsigned int _wsa__ReplyAfter;
#endif

/* wsdd10.h:101 */
#ifndef SOAP_TYPE_wsdd__QNameListType
#define SOAP_TYPE_wsdd__QNameListType (59)
typedef _QName wsdd__QNameListType;
#endif

/* wsdd10.h:104 */
#ifndef SOAP_TYPE_wsdd__UriListType
#define SOAP_TYPE_wsdd__UriListType (60)
typedef char *wsdd__UriListType;
#endif

/* wsdd10.h:107 */
#ifndef SOAP_TYPE_wsdd__FaultCodeOpenType
#define SOAP_TYPE_wsdd__FaultCodeOpenType (61)
typedef char *wsdd__FaultCodeOpenType;
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 SOAP_ENV__Fault(struct soap*, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail);

SOAP_FMAC5 int SOAP_FMAC6 __wsdd__Hello(struct soap*, struct wsdd__HelloType *wsdd__Hello);

SOAP_FMAC5 int SOAP_FMAC6 __wsdd__Bye(struct soap*, struct wsdd__ByeType *wsdd__Bye);

SOAP_FMAC5 int SOAP_FMAC6 __wsdd__Probe(struct soap*, struct wsdd__ProbeType *wsdd__Probe);

SOAP_FMAC5 int SOAP_FMAC6 __wsdd__ProbeMatches(struct soap*, struct wsdd__ProbeMatchesType *wsdd__ProbeMatches);

SOAP_FMAC5 int SOAP_FMAC6 __wsdd__Resolve(struct soap*, struct wsdd__ResolveType *wsdd__Resolve);

SOAP_FMAC5 int SOAP_FMAC6 __wsdd__ResolveMatches(struct soap*, struct wsdd__ResolveMatchesType *wsdd__ResolveMatches);

SOAP_FMAC5 int SOAP_FMAC6 __tdn__Hello(struct soap*, struct wsdd__HelloType tdn__Hello, struct wsdd__ResolveType &tdn__HelloResponse);

SOAP_FMAC5 int SOAP_FMAC6 __tdn__Bye(struct soap*, struct wsdd__ByeType tdn__Bye, struct wsdd__ResolveType &tdn__ByeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __tdn__Probe(struct soap*, struct wsdd__ProbeType tdn__Probe, struct wsdd__ProbeMatchesType &tdn__ProbeResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_SOAP_ENV__Fault(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsdd__Hello(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsdd__Bye(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsdd__Probe(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsdd__ProbeMatches(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsdd__Resolve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___wsdd__ResolveMatches(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___tdn__Hello(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___tdn__Bye(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___tdn__Probe(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_send_SOAP_ENV__Fault(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *_param_1);


SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__HelloType *wsdd__Hello);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Hello(struct soap *soap, struct __wsdd__Hello *_param_2);


SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ByeType *wsdd__Bye);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Bye(struct soap *soap, struct __wsdd__Bye *_param_3);


SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ProbeType *wsdd__Probe);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Probe(struct soap *soap, struct __wsdd__Probe *_param_4);


SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__ProbeMatches(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ProbeMatchesType *wsdd__ProbeMatches);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__ProbeMatches(struct soap *soap, struct __wsdd__ProbeMatches *_param_5);


SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Resolve(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ResolveType *wsdd__Resolve);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Resolve(struct soap *soap, struct __wsdd__Resolve *_param_6);


SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__ResolveMatches(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ResolveMatchesType *wsdd__ResolveMatches);

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__ResolveMatches(struct soap *soap, struct __wsdd__ResolveMatches *_param_7);


SOAP_FMAC5 int SOAP_FMAC6 soap_call___tdn__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__HelloType tdn__Hello, struct wsdd__ResolveType &tdn__HelloResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tdn__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ByeType tdn__Bye, struct wsdd__ResolveType &tdn__ByeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tdn__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ProbeType tdn__Probe, struct wsdd__ProbeMatchesType &tdn__ProbeResponse);

#endif

/* End of soapStub.h */
